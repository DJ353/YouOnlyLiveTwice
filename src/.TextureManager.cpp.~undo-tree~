(undo-tree-save-format-version . 1)
"60c85d0fe1a5ae17de3e63b7036205459d19411a"
[nil nil nil nil (26109 64795 566477 377000) 0 nil]
([nil nil ((58 . 66) (56 . 58) (56 . 57) (t 26109 64761 635814 418000)) nil (26109 64795 566474 933000) 0 nil])
([nil nil ((52 . 54) (38 . 52)) nil (26109 64795 566470 672000) 0 nil])
([nil nil ((104 . 105) (103 . 104) (102 . 103) (nil syntax-table nil 102 . 103) (nil syntax-table (1) 101 . 102) (101 . 102) (100 . 101) (84 . 100) (nil syntax-table nil 84 . 85) (nil syntax-table (1) 83 . 84) (82 . 84) (t 26109 64795 582711 19000)) nil (26109 64803 165118 315000) 0 nil])
([nil nil ((nil rear-nonsticky nil 107 . 108) (#("
" 0 1 (fontified nil)) . -139) (105 . 140) 104 (t 26109 64803 170687 860000)) nil (26109 64812 930093 27000) 0 nil])
([nil nil ((nil rear-nonsticky nil 141 . 142) (#("
" 0 1 (fontified nil)) . -173) (139 . 174) 108) nil (26109 64812 930089 674000) 0 nil])
([nil nil ((nil rear-nonsticky nil 175 . 176) (#("
" 0 1 (fontified nil)) . -207) (173 . 208) 142) nil (26109 64812 930086 811000) 0 nil])
([nil nil ((nil rear-nonsticky nil 209 . 210) (#("
" 0 1 (fontified nil)) . -241) (207 . 242) 176) nil (26109 64812 930080 734000) 0 nil])
([nil nil ((84 . 90) (t 26109 64812 934658 36000)) nil (26109 64833 770861 936000) 0 nil])
([nil nil ((124 . 130)) nil (26109 64833 770860 469000) 0 nil])
([nil nil ((164 . 170)) nil (26109 64833 770858 583000) 0 nil])
([nil nil ((205 . 210) (#("a" 0 1 (fontified t face font-lock-string-face)) . -205) (undo-tree-id0 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -206) (undo-tree-id1 . -1) 207 (205 . 207) (#("e" 0 1 (fontified t face font-lock-string-face)) . -205) (undo-tree-id2 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -206) (undo-tree-id3 . -1) 207 (204 . 207)) nil (26109 64833 770855 720000) 0 nil])
([nil nil ((244 . 250)) nil (26109 64833 770823 802000) 0 nil])
([nil nil ((114 . 115) (111 . 114) (110 . 111) (108 . 110) (t 26109 64833 786594 253000)) nil (26109 64841 399879 428000) 0 nil])
([nil nil ((114 . 115) (#("/" 0 1 (fontified t face font-lock-string-face)) . -114) (undo-tree-id4 . -1) (#("" 0 1 (fontified t face font-lock-string-face)) . -115) (undo-tree-id5 . -1) 116 (115 . 116) (t 26109 64841 406570 914000)) nil (26109 64879 573383 179000) 0 nil])
([nil nil ((nil rear-nonsticky nil 124 . 125) (nil fontified nil 115 . 125) (115 . 125) 114) nil (26109 64879 573373 52000) 0 nil])
([nil nil ((172 . 182) (171 . 172) (168 . 171) (167 . 168) (165 . 167)) nil (26109 64879 573370 678000) 0 nil])
([nil nil ((229 . 239) (228 . 229) (226 . 228) (225 . 226) (224 . 225) (222 . 224)) nil (26109 64879 573368 303000) 0 nil])
([nil nil ((286 . 296) (285 . 286) (282 . 285) (281 . 282) (279 . 281)) nil (26109 64879 573365 370000) 0 nil])
([nil nil ((343 . 353) (342 . 343) (339 . 342) (338 . 339) (336 . 338)) nil (26109 64879 573360 201000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 403) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (405 . 406) (402 . 403) (#("
" 0 1 (fontified nil)) . -404) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 405 (402 . 402) (402 . 405) (#("  " 0 2 (fontified nil)) . 402) (402 . 404) (401 . 401) (401 . 402) (400 . 401) (399 . 400) (#("(" 0 1 (fontified t)) . -399) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(")" 0 1 (fontified t)) . -400) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 401 (399 . 401) (apply yas--snippet-revive 382 399 #s(yas--snippet nil nil nil 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 0 nil nil nil nil)) (382 . 399) (#("unload_textures()" 0 17 (fontified nil)) . -382) (382 . 399) (#("unl" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face)) . -382) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) 385 (382 . 385) (380 . 382) (361 . 380) (360 . 360) (360 . 361) (359 . 359) (359 . 360) (t 26109 64879 590453 737000)) nil (26109 64906 633217 226000) 0 nil])
([nil nil ((404 . 405)) nil (26109 64906 633190 476000) 0 nil])
([nil nil ((417 . 418) (407 . 417) (#("a" 0 1 (fontified t)) . -407) (undo-tree-id57 . -1) (#("o" 0 1 (fontified t)) . -408) (undo-tree-id58 . -1) 409 (404 . 409) (402 . 404) (t 26109 64906 638370 513000)) nil (26109 64916 396394 434000) 0 nil])
([nil nil ((#("  UnloadTexture(
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 402) (undo-tree-id38 . -15) (undo-tree-id39 . 1) (undo-tree-id40 . -16) (undo-tree-id41 . -15) (undo-tree-id42 . -15) (undo-tree-id43 . -17) (undo-tree-id44 . -17) (undo-tree-id45 . -15) (undo-tree-id46 . -15) (undo-tree-id47 . 2) (undo-tree-id48 . -16) (undo-tree-id49 . -15) (undo-tree-id50 . -15) (undo-tree-id51 . -15) (undo-tree-id52 . -15) (undo-tree-id53 . -15) (undo-tree-id54 . -15) (undo-tree-id55 . -15) (undo-tree-id56 . -17) 417) nil (26109 64916 396390 662000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -402) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) 404 (402 . 404) (402 . 403)) nil (26109 64916 396374 459000) 0 nil])
([nil nil ((424 . 428) (#("e" 0 1 (fontified t)) . -424) (undo-tree-id59 . -1) (#("r" 0 1 (fontified t)) . -425) (undo-tree-id60 . -1) 426 (418 . 426) (417 . 418) (416 . 417) (409 . 416) (408 . 409) (404 . 408) (402 . 404) (t 26109 64916 413340 394000)) nil (26109 64944 325780 528000) 0 nil])
([nil nil ((432 . 434) (#("    " 0 4 (fontified nil)) . 432) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (436 . 437) (431 . 432) (#("
" 0 1 (fontified nil)) . -435) 436 (431 . 431) (431 . 436) (#("    " 0 4 (fontified nil)) . 431) (431 . 435) (430 . 430) (430 . 431) (429 . 430) (#("7" 0 1 (fontified t)) . -429) (undo-tree-id65 . -1) 430 (428 . 430) (427 . 428) (#("." 0 1 (fontified t)) . -427) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 428 (t 26109 64944 342254 216000)) nil (26109 64957 779929 831000) 0 nil])
([nil nil ((435 . 442) (431 . 435) (t 26109 64957 785212 676000)) nil (26109 64965 611523 855000) 0 nil])
([nil nil ((442 . 443)) nil (26109 64965 611519 246000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -415) (undo-tree-id89 . -1) 416 (415 . 416) (t 26109 64965 616188 459000)) nil (26109 64994 978932 576000) 0 nil])
([nil nil ((416 . 419)) nil (26109 64994 978930 621000) 0 nil])
([nil nil ((#("item " 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t)) . 415) (undo-tree-id86 . 1) (undo-tree-id87 . -4) (undo-tree-id88 . -1) 416) nil (26109 64994 978929 224000) 0 nil])
([nil nil ((417 . 422) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -417) (undo-tree-id85 . -1) 418 (415 . 418)) nil (26109 64994 978926 360000) 0 nil])
([nil nil ((#("    i.first;
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 436) (undo-tree-id79 . -10) (undo-tree-id80 . -12) (undo-tree-id81 . -11) (undo-tree-id82 . -11) (undo-tree-id83 . -4) (undo-tree-id84 . -5) 447) nil (26109 64994 978923 916000) 0 nil])
([nil nil ((440 . 453) (436 . 440) (436 . 437) 438) nil (26109 64994 978916 722000) 0 nil])
([nil nil ((#("texture" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face)) . 415) (undo-tree-id73 . -6) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -7) 418) nil (26109 64994 978913 929000) 0 nil])
([nil nil ((420 . 429) (419 . 420) (414 . 419) (#("&" 0 1 (fontified t)) . -414) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 415) nil (26109 64994 978905 967000) 0 nil])
([nil nil ((429 . 430) (t 26109 64994 996097 490000)) nil (26109 64996 446742 456000) 0 nil])
([nil nil ((#("    UnloadTexture
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 444) (undo-tree-id90 . -17) (undo-tree-id91 . -17) (undo-tree-id92 . -17) (undo-tree-id93 . -16) (undo-tree-id94 . -4) (undo-tree-id95 . -17) 460 (t 26109 64996 452092 978000)) nil (26109 65007 411670 464000) 0 nil])
([nil nil ((470 . 471) (469 . 470) (462 . 469) (461 . 462) (448 . 461) (444 . 448) (444 . 445) 446 (t 26109 65007 428058 945000)) nil (26109 65013 33676 980000) 0 nil])
([nil nil ((414 . 416) (#("[" 0 1 (fontified t)) . -414) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("n" 0 1 (fontified t)) . -415) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("a" 0 1 (fontified t)) . -416) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("m" 0 1 (fontified t)) . -417) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("e" 0 1 (fontified t)) . -418) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("," 0 1 (fontified t)) . -419) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#(" " 0 1 (fontified t)) . -420) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("t" 0 1 (fontified t)) . -421) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("e" 0 1 (fontified t)) . -422) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("x" 0 1 (fontified t)) . -423) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("t" 0 1 (fontified t)) . -424) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (#("u" 0 1 (fontified t)) . -425) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("r" 0 1 (fontified t)) . -426) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#("e" 0 1 (fontified t)) . -427) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("]" 0 1 (fontified t)) . -428) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . 1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 429 (t 26109 65013 35041 551000)) nil (26109 65027 232169 224000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . 415) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (t 26109 65027 237997 464000)) nil (26109 65032 454251 273000) 0 nil])
([nil nil ((415 . 422)) nil (26109 65032 454238 422000) 0 nil])
([nil current ((462 . 469) (t 26109 65032 459981 245000)) nil (26109 65036 561482 192000) 0 nil])
nil
